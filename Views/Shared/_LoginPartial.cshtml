@using Microsoft.AspNetCore.Identity
@using BlogService
@using Blog7.Models
@using BlogService.Data

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject IHttpContextAccessor httpContextAccessor
@inject ApplicationDbContext dbContext

@{
    var userAvatar = new UserAvatar(UserManager, SignInManager, httpContextAccessor, dbContext);
}

<ul class="navbar-nav ms-auto">

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="MyBlog" asp-action="Index">My Blog</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </li>
    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name</a>
    </li>
    <li>
        @*<partial name="_UserAvatar" />*@
        @await Html.PartialAsync("_UserAvatar", userAvatar)
    </li>
    <li class="nav-item">
        <form  class="d-flex" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="btn btn-danger">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
