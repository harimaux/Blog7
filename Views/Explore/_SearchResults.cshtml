@model Blog7.Models.MainVM

@if(Model.PostsList != null)
{
    foreach (var post in Model.PostsList)
    {
        <div class="fr-wrapper displayPostCustomBox">

            <div class="fr-element fr-view">

                <div class="d-flex justify-content-between rounded-1 bg-dark bg-gradient text-light p-2">

                    <div>
                        <h3>@post.Title</h3>

                        @if (Model.PostCategory != null && !string.IsNullOrEmpty(post.Category))
                        {
                            //var categoryIds = Model.Post.Category.Split(',').Select(x => x.Trim());
                            var categoryIds = post.Category.Split(',').Select(x => x.Trim());

                            <div class="d-flex">
                                @foreach (var item in Model.PostCategory)
                                {
                                    if (categoryIds.Contains(item.Id.ToString()))
                                    {
                                        <p>@item.CategoryName&nbsp;&nbsp;</p>
                                    }
                                }
                            </div>

                        }
                    </div>



                </div>


                <div class="mt-5">
                    @Html.Raw(post.Content)
                </div>

            </div>

        </div>
    }
}




@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { runSearch = true, categoryId = Model.PageCategoryId, page = i })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            }

        </ul>
    </nav>
}